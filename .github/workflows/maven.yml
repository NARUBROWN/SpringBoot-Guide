# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI/CD with Maven

on:
  push:
    branches: [ "wonjeong/*" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Test with Maven
      run: mvn -Dtest="ProductControllerTest, ProductServiceTest"

    - name: SCP Builded File
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.RASPI_HOST }}
        username: ${{ secrets.RASPI_USER }}
        password: ${{ secrets.RASPI_PASSWORD }}
        port: ${{ secrets.RASPI_SSH_PORT }}
        source: "build/libs/*.jar"
        target: project

    - name: Deploy remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.RASPI_HOST }}
        username: ${{ secrets.RASPI_USER }}
        password: ${{ secrets.RASPI_PASSWORD }}
        port: ${{ secrets.RASPI_SSH_PORT }}
        script: |
          ps -ef | grep Sjpa | awk '{print $2}' | xargs kill -9
          cd project
          nohup java -jar *.jar spring.profiles.active=prod --server.port=8080
          
          
            
            
